"use strict";
var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};
var __metadata = (this && this.__metadata) || function (k, v) {
    if (typeof Reflect === "object" && typeof Reflect.metadata === "function") return Reflect.metadata(k, v);
};
var core_1 = require('@angular/core');
var router_1 = require('@angular/router');
var services_1 = require('app/services');
var models_1 = require('app/models');
var global_1 = require('app/global');
var CmsRecipeEditComponent = (function () {
    function CmsRecipeEditComponent(route, router, cmsService, globalVariables) {
        this.route = route;
        this.router = router;
        this.cmsService = cmsService;
        this.globalVariables = globalVariables;
        this.recipe = new models_1.RecipeEditModel();
        this.SelectAbleHours = new Array();
        for (var i = 0; i <= 59; i++) {
            this.SelectAbleHours.push(i);
        }
        this.SelectAbleMinuts = new Array();
        for (var i = 0; i <= 50; i = i + 10) {
            this.SelectAbleMinuts.push(i);
        }
    }
    CmsRecipeEditComponent.prototype.ngOnInit = function () {
        var _this = this;
        this.cmsService.getIngredients().then(function (ingredients) { return _this.SelectAbleIngerdients = ingredients; });
        this.cmsService.getMeasurements().then(function (measurements) { return _this.SelectAbleMeasurements = measurements; });
        this.cmsService.getAuthors().then(function (authors) { return _this.SelectAbleAuthors = authors; });
        this.cmsService.getSeoTags().then(function (seos) { return _this.SelectAbleSeoTags = seos; });
        this.route.params.forEach(function (params) {
            if (!isNaN(+params['id'])) {
                _this.id = +params['id'];
            }
            else {
                _this.id = 0;
            }
            _this.cmsService.getRecipeEdit(_this.id).then(function (recipe) { return _this.setRecipe(recipe); });
        });
    };
    CmsRecipeEditComponent.prototype.submit = function (model) {
        var _this = this;
        this.cmsService.saveRecipeEdit(model)
            .then(function (result) {
            _this.globalVariables.requestResult = result;
            _this.timer = setTimeout(function () { return _this.globalVariables.requestResult = new models_1.FormResultModel(); }, 3000);
            _this.router.navigate(['/CMS/Rezepte/Bearbeiten/' + result.newId]);
        });
    };
    CmsRecipeEditComponent.prototype.setRecipe = function (newRecipe) {
        console.info(newRecipe);
        this.recipe = newRecipe;
    };
    CmsRecipeEditComponent.prototype.addIngredient = function () {
        if (this.recipe.ingredientList == null) {
            this.recipe.ingredientList = new Array();
        }
        var ingredientListItem = new models_1.IngredientListItemModel();
        ingredientListItem.id = 0;
        ingredientListItem.amount = 1;
        ingredientListItem.ingredientId = 0;
        ingredientListItem.ingredientName = "";
        ingredientListItem.measurementId = 0;
        ingredientListItem.measurementName = "";
        this.recipe.ingredientList.push(ingredientListItem);
    };
    CmsRecipeEditComponent.prototype.isAuthorSelected = function (id) {
        return (this.recipe.authors.filter(function (x) { return x.id == id; }).length > 0);
    };
    CmsRecipeEditComponent.prototype.isSeoTagSelected = function (id) {
        return (this.recipe.seoTags.filter(function (x) { return x.id == id; }).length > 0);
    };
    CmsRecipeEditComponent.prototype.fileChangeEvent = function (fileInput) {
        var _this = this;
        this.filesToUpload = fileInput.target.files;
        this.makeFileRequest("/api/CMS/Recipe/Upload", [], this.filesToUpload).then(function (result) {
            _this.recipe.teaserImageUrl = "/upload/" + _this.filesToUpload[0].name;
        }, function (error) {
            console.error(error);
        });
    };
    CmsRecipeEditComponent.prototype.makeFileRequest = function (url, params, files) {
        return new Promise(function (resolve, reject) {
            var formData = new FormData();
            var xhr = new XMLHttpRequest();
            formData.append("file", files[0], files[0].name);
            xhr.onreadystatechange = function () {
                if (xhr.readyState == 4) {
                    if (xhr.status == 200) {
                        resolve(true);
                    }
                    else {
                        reject(false);
                    }
                }
            };
            xhr.open("POST", url, true);
            xhr.send(formData);
        });
    };
    CmsRecipeEditComponent = __decorate([
        core_1.Component({
            templateUrl: '/views/cms/CmsRecipeEdit.html'
        }), 
        __metadata('design:paramtypes', [router_1.ActivatedRoute, router_1.Router, services_1.CmsService, global_1.GlobalVariables])
    ], CmsRecipeEditComponent);
    return CmsRecipeEditComponent;
}());
exports.CmsRecipeEditComponent = CmsRecipeEditComponent;
