/// <binding ProjectOpened='bundle:css, bundle:js' />
"use strict";

const gulp = require("gulp");
const less = require("gulp-less");
const concatCss = require('gulp-concat-css');
const watch = require("gulp-watch");
const tslint = require('gulp-tslint');;
const del = require("del");
const systemjsBuilder = require('systemjs-builder');


gulp.task('bundle:js', function () {
	return watch('wwwroot/App/**/*.ts', function () {

		var builder = new systemjsBuilder('', './Scripts/system.config.js');
		builder.buildStatic('wwwroot/App', 'wwwroot/bundle/app.min.js')
		.then(function () {
			return del(['wwwroot/dist/js/**/*', '!wwwroot/dist/js/app.min.js']);
		})
		.catch(function (err) {
			console.error('>>> [systemjs-builder] Bundling failed'.bold.green, err);
		});
	});
});

gulp.task('bundle:css', function () {
	return watch('CSS/**/*.less', function () {
		gulp.src('CSS/**/*.less')
				.pipe(less())
				.pipe(gulp.dest('wwwroot/css/'));
		gulp.src('CSS/bootstrap/*.css')
			.pipe(gulp.dest('wwwroot/css/1_frameworks'));
		gulp.src('wwwroot/css/**/*.css')
			.pipe(concatCss("site.min.css"))
			.pipe(gulp.dest('wwwroot/bundle/'));
	});
});

//watch('CSS/**/*.less', ['bundle:css']);
//watch('wwwroot/App/**/*.ts', ['bundle:js']);
//watch('Scripts/**/*.js', ['bundle:js']);
