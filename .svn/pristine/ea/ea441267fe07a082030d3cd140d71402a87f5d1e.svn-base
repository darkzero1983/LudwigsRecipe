"use strict";
var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};
var __metadata = (this && this.__metadata) || function (k, v) {
    if (typeof Reflect === "object" && typeof Reflect.metadata === "function") return Reflect.metadata(k, v);
};
var core_1 = require('@angular/core');
var http_1 = require('@angular/http');
require('rxjs/add/operator/toPromise');
var CmsService = (function () {
    function CmsService(http) {
        this.http = http;
        this.headers = new http_1.Headers({ 'Content-Type': 'application/json' });
    }
    CmsService.prototype.getRecipes = function (page) {
        var url = '/api/cms/Recipes?page=' + page;
        return this.http.get(url, { headers: this.headers })
            .toPromise()
            .then(function (response) { return response.json(); })
            .catch(this.handleError);
    };
    CmsService.prototype.getRecipe = function (id) {
        return this.http.get('/api/cms/Recipe/' + id, { headers: this.headers })
            .toPromise()
            .then(function (response) { return response.json(); })
            .catch(this.handleError);
    };
    CmsService.prototype.saveRecipe = function (data) {
        var url = '/api/CMS/Recipe';
        var myData = JSON.stringify(data);
        return this.http.post(url, myData, { headers: this.headers })
            .toPromise()
            .then(function (response) { return response.json(); })
            .catch(this.handleError);
    };
    CmsService.prototype.deleteRecipe = function (id) {
        return this.http.delete('/api/cms/Recipe/' + id, { headers: this.headers })
            .toPromise()
            .then(function (response) { return response.json(); })
            .catch(this.handleError);
    };
    CmsService.prototype.getIngredients = function () {
        var url = '/api/cms/Ingredients';
        return this.http.get(url, { headers: this.headers })
            .toPromise()
            .then(function (response) { return response.json(); })
            .catch(this.handleError);
    };
    CmsService.prototype.getIngredientsForIds = function (ids) {
        var url = '/api/cms/Ingredients/' + ids;
        return this.http.get(url, { headers: this.headers })
            .toPromise()
            .then(function (response) { return response.json(); })
            .catch(this.handleError);
    };
    CmsService.prototype.putIngredients = function (ids, name) {
        var url = '/api/cms/Ingredients/' + encodeURIComponent(ids) + '/' + encodeURIComponent(name);
        return this.http.put(url, { headers: this.headers })
            .toPromise()
            .then(function (response) { return response.json(); })
            .catch(this.handleError);
    };
    CmsService.prototype.getMeasurements = function () {
        var url = '/api/cms/Measurements';
        return this.http.get(url, { headers: this.headers })
            .toPromise()
            .then(function (response) { return response.json(); })
            .catch(this.handleError);
    };
    CmsService.prototype.getAuthors = function () {
        var url = '/api/cms/Authors';
        return this.http.get(url, { headers: this.headers })
            .toPromise()
            .then(function (response) { return response.json(); })
            .catch(this.handleError);
    };
    CmsService.prototype.getSeoTags = function () {
        var url = '/api/cms/SeoTags';
        return this.http.get(url, { headers: this.headers })
            .toPromise()
            .then(function (response) { return response.json(); })
            .catch(this.handleError);
    };
    CmsService.prototype.getCategories = function () {
        var url = '/api/CMS/Category';
        return this.http.get(url, { headers: this.headers })
            .toPromise()
            .then(function (response) { return response.json(); })
            .catch(this.handleError);
    };
    CmsService.prototype.saveCategories = function (data) {
        var url = '/api/CMS/Category';
        var myData = JSON.stringify(data);
        return this.http.post(url, myData, { headers: this.headers })
            .toPromise()
            .then(function (response) { return response.json(); })
            .catch(this.handleError);
    };
    CmsService.prototype.handleError = function (error) {
        console.error('An error occurred', error);
        return Promise.reject(error.message || error);
    };
    CmsService = __decorate([
        core_1.Injectable(), 
        __metadata('design:paramtypes', [http_1.Http])
    ], CmsService);
    return CmsService;
}());
exports.CmsService = CmsService;
