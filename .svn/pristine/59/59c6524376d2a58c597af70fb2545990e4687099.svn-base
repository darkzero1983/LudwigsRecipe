using Microsoft.AspNetCore.Mvc;
using System.Collections.Generic;
using LudwigsRecipe.Service.Models.Ingredient;
using LudwigsRecipe.Service.Services.IngredientService;
using Microsoft.AspNetCore.Authorization;
using System.Linq;

namespace LudwigsRecipe.Web.Api.Recipe
{
	[Authorize(Roles = "Admin, Author")]

	public class IngredientsController : Controller
	{
		#region ctor
		private readonly IIngredientService _ingredientService;

		public IngredientsController(IIngredientService ingredientService)
		{
			_ingredientService = ingredientService;
		}
		#endregion

		[Route("api/cms/[controller]")]
		[HttpGet]
		public IEnumerable<IngredientViewModel> Get()
		{
			return _ingredientService.LoadIngredients(false);
		}

		[Route("api/cms/[controller]/{ids}")]
		[HttpGet]
		public IEnumerable<IngredientViewModel> Get(string ids)
		{
			List<int> requestIds = parseIds(ids);
			return _ingredientService.LoadIngredients(false).Where(x => requestIds.Contains(x.Id));
		}

		[Route("api/cms/[controller]/{ids}/{name}")]
		[HttpPut]
		public bool Put(string ids, string name)
		{
			List<int> requestIds = parseIds(ids);

			foreach (int id in requestIds)
			{
				_ingredientService.UpdateOrCombineIngredient(id, name);
			}
			return true;
		}

		private List<int>  parseIds(string ids)
		{
			List<int> requestIds = new List<int>();
			string[] idList = ids.Split(',');
			foreach (string item in idList)
			{
				int id;
				int.TryParse(item, out id);
				if (id > 0)
				{
					requestIds.Add(id);
				}
			}
			return requestIds;
		}
	}
}
